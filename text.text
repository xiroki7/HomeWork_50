1. Blog.Objects.all()
2. Blog.objects.get(pk=1)
3. Blog.objects.get(name='Gray Group')
4. Blog.objects.annotate(text_len=Length('tagline')).filter(text_len__gt=100)
5. Author.objects.filter(email='rtorres@hayes-smith.org')
6. Author.objects.filter(email__endswith='gmail.com')
7. Blog.objects.all().values('name').order_by('name')
8. Blog.objects.all()[::-1][:10]
9. Entry.objects.get(headline='Sense nation benefit.')
10. Entry.objects.all().values('body_text')
11. Entry.objects.all().filter(pub_date__year = '2023')
12. Entry.objects.filter(pub_date = datetime.today())
13. Entry.objects.filter(number_of_comments__gte=10).values('headline')
14. Entry.objects.annotate(res_count=Sum('number_of_comments')).filter(res_count__gt=100).values('headline', 'res_count')
15. Entry.objects.all()
16. Blog.objects.annotate(counts=Count('entry__headline')).values('entry__authors__name', 'counts')
17. Entry.objects.annotate(res_rating=Sum('rating')).filter(res_rating__gt=8).values('headline', 'res_rating')
18. Entry.objects.all().values('headline', 'number_of_comments').order_by('-number_of_comments')
19. Entry.objects.annotate(res=Count('headline')).values('authors__name', 'res')
20. Entry.objects.aggregate(Max('rating'))
21. Blog.objects.count()
22. Author.objects.count()
23. Entry.objects.count()
24. Entry.objects.aggregate(Count_avg=Avg('id'))
25. Entry.objects.all().values('headline', 'number_of_comments').order_by('-number_of_comments')[0]
26. Entry.objects.all().values('headline', 'rating').order_by('rating')[0]
27. Entry.objects.annotate(all_res=Sum('rating')).values('headline', 'all_res')
28  Blog.objects.annotate(headline_count=Count('tagline')).values('name', 'headline_count')
29. Blog.objects.annotate(max_post=Count('entry__headline')).values('entry__authors__name', 'max_post')
30. Blog.objects.annotate(all_sum=Count('tagline')).values('tagline', 'all_sum')
31. Entry.objects.annotate(avg_res=Avg('rating')).values('authors__name', 'avg_res')
31. Blog.objects.annotate(ratings=Avg('entry__rating')).values('entry__authors__name', 'ratings')
32. Blog.objects.annotate(max_post=Count('entry__headline')).order_by('-max_post').values('entry__authors__name', 'max_post')[0]
33. Blog.objects.all().annotate(comments=Avg('entry__number_of_comments')).values('name', 'comments')
34. Entry.objects.aggregate(all_sum=Sum('number_of_comments'))
35. Entry.objects.all().order_by('-number_of_comments').values('headline', 'number_of_comments')[0]
36. Entry.objects.filter(pub_date__gte=timezone.now()-timedelta(days=30)).order_by('-number_of_comments').values('headline', 'number_of_comments')[:10]
37. Entry.objects.filter(pub_date__year= 2023, pub_date__month= 1)
38. Entry.objects.annotate(coa=Count('headline')).filter(coa__gte =3).values('authors__name', 'coa')
39. Entry.objects.annotate(res=Count('headline')).values('authors__name', 'res')
40. Entry.objects.filter(number_of_comments__lt=20)
41. Entry.objects.annotate(res_max_rating=Max('rating')).values('blog_id' ,'headline' ,'res_max_rating').order_by('-res_max_rating')
43. Entry.objects.filter(pub_date__year=2023).count()
44. Entry.objects.annotate(res_max=Max('number_of_pingbacks')).values('headline', 'res_max').order_by('-res_max')[:1]
45. Entry.objects.annotate(res_sum=Sum('id')).values('blog_id', 'res_sum')
46. Entry.objects.annotate(res_avg=Avg('rating')).values('blog_id', 'res_avg'
47. Entry.objects.annotate(res=Count('headline', distinct=True), avg_res= Avg('headline', distinct=True)).values('authors__name', 'res', 'avg_res')
48. Entry.objects.all().values('pub_date', 'headline').order_by('pub_date')
49. Blog.objects.annotate(author_count=Count('entry__authors', distinct=True)).values('name', 'author_count')
50. Entry.objects.filter(pub_date = datetime.today())


20. Entry.objects.annotate(res_max_rating=Max('rating')).values('headline', 'res_max_rating').order_by('-res_max_rating')[:10]

Author.objects.annotate(entry_count=Count('entry')).values('name', 'entry_count')

Blog.objects.annotate(avtor._count=Count('entry__authors', distinct=True)).values('name', 'avtor_count')